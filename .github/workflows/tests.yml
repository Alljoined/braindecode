on:
  pull_request:
  push:
    branches: master

jobs:
  Test-Braindecode:
    strategy:
      name: test ${{ matrix.os }}, py-${{ matrix.python-version }}
      runs-on: ${{ matrix.os }}
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        python-version: [3.7, 3.8, 3.9, '3.10']
    defaults:
      run:
        shell: bash -l {0}
    steps:

    ## Install Braindecode
    - name: Checking Out Repository
      uses: actions/checkout@v2
    # Cache MNE Data
    # The cache key here is fixed except for os
    # so if you download a new mne dataset in the code, best to manually increment the key below
    - name: Create/Restore MNE Data Cache
      id: cache-mne_data
      uses: actions/cache@v2
      with:
        path: ~/mne_data
        key: ${{ runner.os }}-v3
    - name: Setting Up Conda Braindecode Environment
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        environment-file: environment.yml
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
        use-mamba: true
        miniforge-variant: Mambaforge
        channels: conda-forge
        activate-environment: braindecode
      # Show Conda and Python Versions
    - run: conda --version
    - run: conda info --envs
    - run: which python
    # Update pip
    - name: Update pip
      run: pip install --upgrade pip
    # Install MOABB as well
    - name: Install MOABB
      run: pip install moabb
    # Use skorch github master if requested, otherwise has been installed via conda in environment.yaml
    - name: Install Skorch version from pip
      run: pip install skorch
    - name: Install Braindecode from Current Checkout
      run: pip install -e .
    # Show Braindecode Version
    - run: python -c "import braindecode; print(braindecode.__version__)"

    ## Run Tests
    - name: Install Codecov etc.
      run: pip install --upgrade pytest pytest-cov codecov
    - name: Run Tests # See https://stackoverflow.com/a/59959080/1469195 for the cov-report logic
      run: pytest --cov=braindecode test/ --cov-report term --cov-report xml:coverage.xml
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        path_to_write_report: ./codecov_report.txt
    - name: Upload Codecov Coverage report for checking
      uses: actions/upload-artifact@v2
      with:
        name: codecov-report
        path: ./codecov_report.txt

